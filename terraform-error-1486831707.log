1 error(s) occurred:

* apply operation: ReadDataDiff "module.etcd.data.template_file.kubeetcd" had unequal configs (real, then shadow):

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"vars":[]map[string]interface {}{map[string]interface {}{"smilodon_release_md5":"${var.smilodon_release_md5}", "internal-tld":"${ var.internal-tld }", "cacertobject":"${var.capem}", "smilodon_release_url":"${var.smilodon_release_url}", "environment":"${var.environment}", "etcd_memberlist":"${join(\",\", concat(formatlist(\"%s=https://%s:2380\", keys(var.etcd_nodes_az1), values(var.etcd_nodes_az1)), formatlist(\"%s=https://%s:2380\", keys(var.etcd_nodes_az2), values(var.etcd_nodes_az2)), formatlist(\"%s=https://%s:2380\", keys(var.etcd_nodes_az3), values(var.etcd_nodes_az3)) ))}", "zonename":"${var.zonename}", "region":"${ var.adminregion }", "bucket":"${ var.bucketname }", "etcdcertobject":"${var.etcdpem}", "etcdkeyobject":"${var.etcdkey}"}}, "template":"${file(\"${path.module}/${var.userdata}\")}"}, Config:map[string]interface {}{"vars":[]map[string]interface {}{map[string]interface {}{"internal-tld":"terrakube.com", "smilodon_release_url":"https://github.com/UKHomeOffice/smilodon/releases/download/v0.0.4/smilodon-0.0.4-linux-amd64", "cacertobject":"ca.pem", "etcdcertobject":"etcd.pem", "etcdkeyobject":"etcdkey.pem", "zonename":"ZL0UNDQYJOIZQ", "region":"us-east-2", "bucket":"kubernetes-certs", "etcd_memberlist":"node0=https://10.0.0.10:2380,node1=https://10.0.1.10:2380,node2=https://10.0.2.10:2380", "smilodon_release_md5":"071d32e53fdb53fa17c7bbe03744fdf6", "environment":"Staging"}}, "template":"#cloud-config\n\ncoreos:\n  etcd2:\n    data-dir: /var/lib/etcd2\n    initial-cluster-state: new\n    initial-cluster-token: etcd-terrakube-cluster\n    initial-cluster: ${etcd_memberlist}\n    cert-file: /etc/ssl/kubernetes/etcd.pem\n    key-file: /etc/ssl/kubernetes/etcdkey.pem\n    peer-cert-file: /etc/ssl/kubernetes/etcd.pem\n    peer-key-file: /etc/ssl/kubernetes/etcdkey.pem\n  units:\n  - name: etcd2.service\n    command: start\n    enable: true\n    drop-ins:\n    - name: 15-deps.conf\n      content: |\n        [Unit]\n        Description=Etcd2 - unit for etcd\n        After=smilodon.service\n        Requires=smilodon.service\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        EnvironmentFile=/run/smilodon/environment\n        ExecStart=\n        ExecStart=-/usr/bin/etcd2 --name=node$${NODE_ID} \\\n          --initial-advertise-peer-urls=https://$${NODE_IP}:2380 \\\n          --listen-peer-urls=https://0.0.0.0:2380 \\\n          --listen-client-urls=https://0.0.0.0:2379 \\\n          --advertise-client-urls=https://$${NODE_IP}:2379\n  - name: systemd-sysctl.service\n    command: restart\n  - name: smilodon.service\n    command: start\n    enable: true\n    content: |\n      [Unit]\n      Description=Smilodon - manage ebs+eni attachment\n      After=kmsctl-certs.service\n      Requires=kmsctl-certs.service\n      [Service]\n      Environment=\"URL=${smilodon_release_url}\"\n      Environment=\"OUTPUT_FILE=/opt/bin/smilodon\"\n      Environment=\"MD5SUM=${smilodon_release_md5}\"\n      EnvironmentFile=/etc/aws-environment\n      ExecStartPre=/usr/bin/mkdir -p /opt/bin\n      ExecStartPre=/usr/bin/bash -c 'until [[ -x $${OUTPUT_FILE} ]] && [[ $(md5sum $${OUTPUT_FILE} | cut -f1 -d\" \") == $${MD5SUM} ]]; do wget -q -O $${OUTPUT_FILE} $${URL} && chmod +x $${OUTPUT_FILE}; done'\n      ExecStart=/opt/bin/smilodon --filters=tag:Env=${environment}\n      Restart=on-failure\n      RestartSec=10\n  - name: kmsctl-certs.service\n    command: start\n    enable: true\n    content: |\n      [Unit]\n      Description=KMSCtl - download certs\n      [Service]\n      ExecStartPre=/usr/bin/mkdir -p /opt/bin\n      ExecStartPre=/usr/bin/mkdir -p /var/lib/etcd2\n      ExecStartPre=/usr/bin/mkdir -p /etc/ssl/kubernetes\n      ExecStartPre=/usr/bin/chown -R etcd:etcd /etc/ssl/kubernetes /var/lib/etcd2\n      ExecStartPre=/usr/bin/chmod 0744 /etc/ssl/kubernetes /var/lib/etcd2\n      ExecStartPre=/usr/bin/wget https://github.com/gambol99/kmsctl/releases/download/v1.0.4/kmsctl-linux-amd64 -O /opt/bin/kmsctl\n      ExecStartPre=/usr/bin/chmod +x /opt/bin/kmsctl\n      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${etcdcertobject}\n      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${etcdkeyobject}\n      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${cacertobject}\n      ExecStartPre=/usr/bin/chmod 0644 /etc/ssl/kubernetes/${etcdcertobject} /etc/ssl/kubernetes/${etcdkeyobject} /etc/ssl/kubernetes/${cacertobject}\n      ExecStartPre=/usr/bin/bash -c \"cp -f /etc/ssl/kubernetes/* /etc/ssl/certs\"\n      ExecStartPre=/usr/sbin/update-ca-certificates\n      ExecStartPre=/usr/bin/chown -R etcd:etcd /etc/ssl/kubernetes /var/lib/etcd2\n      ExecStart=/usr/bin/echo \"Completed Cert downloads\"\n      Restart=always\n      RestartSec=10\n      TimeoutStartSec=300\n# Workaround until this has been fixed: https://github.com/systemd/systemd/issues/1784\n  - name: networkd-restart.service\n    command: start\n    enable: true\n    content: |\n      [Unit]\n      Description=Restart systemd-networkd when DOWN interface is found\n      [Service]\n      ExecStart=/usr/bin/bash -c 'while true; do ip -o -4 link show | grep -q \"eth[0-1]:.*state DOWN\" && systemctl restart systemd-networkd; sleep 60; done'\n      Restart=always\n      RestartSec=10\n  - name: 20-eth1.network\n    runtime: false\n    content: |\n      [Match]\n      Name=eth1\n      [Network]\n      DHCP=ipv4\n      [DHCP]\n      UseDNS=false\n      SendHostname=true\n      UseRoutes=false\n      RouteMetric=2048\n  - name: docker.service\n    drop-ins:\n    - name: 10-opts.conf\n      content: |\n        [Service]\n        Environment=\"DOCKER_OPTS=--iptables=false --log-opt max-size=100m --log-opt max-file=1 --default-ulimit=nofile=32768:32768 --default-ulimit=nproc=16384:16384\"\nwrite_files:\n- path: /etc/sysctl.d/10-disable-ipv6.conf\n  permissions: 0644\n  owner: root\n  content: |\n    net.ipv6.conf.all.disable_ipv6 = 1\n- path: /etc/sysctl.d/baselayout.conf\n  permissions: 0644\n  owner: root\n  content: |\n    net.ipv4.ip_forward = 1\n    net.ipv4.conf.default.rp_filter = 2\n    net.ipv4.conf.all.rp_filter = 2\n    kernel.kptr_restrict = 1\n- path: /etc/aws-environment\n  permissions: 0444\n  content: |\n    AWS_REGION=${region}\n    DNS_ZONE_NAME=${zonename}\n    ENVIRONMENT=${environment}\n- path: /etc/profile.env\n  content: |\n    export ETCDCTL_ENDPOINT=https://127.0.0.1:2379\n    export ETCDCTL_CA_FILE=/etc/ssl/kubernetes/ca.pem\n    export ETCDCTL_CERT_FILE=/etc/ssl/kubernetes/etcd.pem\n    export ETCDCTL_KEY_FILE=/etc/ssl/kubernetes/etcdkey.pem\n    source /run/smilodon/environment\n"}, raw:(*config.RawConfig)(0xc4216b9e60)}

&terraform.ResourceConfig{ComputedKeys:[]string(nil), Raw:map[string]interface {}{"template":"${file(\"${path.module}/${var.userdata}\")}", "vars":[]map[string]interface {}{map[string]interface {}{"cacertobject":"${var.capem}", "smilodon_release_url":"${var.smilodon_release_url}", "environment":"${var.environment}", "etcd_memberlist":"${join(\",\", concat(formatlist(\"%s=https://%s:2380\", keys(var.etcd_nodes_az1), values(var.etcd_nodes_az1)), formatlist(\"%s=https://%s:2380\", keys(var.etcd_nodes_az2), values(var.etcd_nodes_az2)), formatlist(\"%s=https://%s:2380\", keys(var.etcd_nodes_az3), values(var.etcd_nodes_az3)) ))}", "smilodon_release_md5":"${var.smilodon_release_md5}", "zonename":"${var.zonename}", "internal-tld":"${ var.internal-tld }", "region":"${ var.adminregion }", "bucket":"${ var.bucketname }", "etcdcertobject":"${var.etcdpem}", "etcdkeyobject":"${var.etcdkey}"}}}, Config:map[string]interface {}{"vars":[]map[string]interface {}{map[string]interface {}{"etcdkeyobject":"etcdkey.pem", "etcd_memberlist":"node0=https://10.0.0.10:2380,node1=https://10.0.1.10:2380,node2=https://10.0.2.10:2380", "smilodon_release_md5":"071d32e53fdb53fa17c7bbe03744fdf6", "region":"us-east-2", "smilodon_release_url":"https://github.com/UKHomeOffice/smilodon/releases/download/v0.0.4/smilodon-0.0.4-linux-amd64", "environment":"Staging", "zonename":"ZL0UNDQYJOIZQ", "internal-tld":"terrakube.com", "bucket":"kubernetes-certs", "etcdcertobject":"etcd.pem", "cacertobject":"ca.pem"}}, "template":"#cloud-config\n\ncoreos:\n  etcd2:\n    data-dir: /var/lib/etcd2\n    initial-cluster-state: new\n    initial-cluster-token: etcd-terrakube-cluster\n    initial-cluster: ${etcd_memberlist}\n    cert-file: /etc/ssl/kubernetes/etcd.pem\n    key-file: /etc/ssl/kubernetes/etcdkey.pem\n    peer-cert-file: /etc/ssl/kubernetes/etcd.pem\n    peer-key-file: /etc/ssl/kubernetes/etcdkey.pem\n  units:\n  - name: etcd2.service\n    command: start\n    enable: true\n    drop-ins:\n    - name: 15-deps.conf\n      content: |\n        [Unit]\n        Description=Etcd2 - unit for etcd\n        After=smilodon.service\n        Requires=smilodon.service\n        [Service]\n        PermissionsStartOnly=true\n        RuntimeDirectory=etcd2\n        RuntimeDirectoryMode=0700\n        EnvironmentFile=/run/smilodon/environment\n        RestartSec=30\n        Restart=always\n        ExecStart=\n        ExecStart=-/usr/bin/etcd2 --name=node$${NODE_ID} \\\n          --initial-advertise-peer-urls=https://$${NODE_IP}:2380 \\\n          --listen-peer-urls=https://0.0.0.0:2380 \\\n          --listen-client-urls=https://0.0.0.0:2379,https://127.0.0.1:2379 \\\n          --advertise-client-urls=https://$${NODE_IP}:2379\n  - name: systemd-sysctl.service\n    command: restart\n  - name: smilodon.service\n    command: start\n    enable: true\n    content: |\n      [Unit]\n      Description=Smilodon - manage ebs+eni attachment\n      After=kmsctl-certs.service\n      Requires=kmsctl-certs.service\n      [Service]\n      Environment=\"URL=${smilodon_release_url}\"\n      Environment=\"OUTPUT_FILE=/opt/bin/smilodon\"\n      Environment=\"MD5SUM=${smilodon_release_md5}\"\n      EnvironmentFile=/etc/aws-environment\n      ExecStartPre=/usr/bin/mkdir -p /opt/bin\n      ExecStartPre=/usr/bin/bash -c 'until [[ -x $${OUTPUT_FILE} ]] && [[ $(md5sum $${OUTPUT_FILE} | cut -f1 -d\" \") == $${MD5SUM} ]]; do wget -q -O $${OUTPUT_FILE} $${URL} && chmod +x $${OUTPUT_FILE}; done'\n      ExecStart=/opt/bin/smilodon --filters=tag:Env=${environment}\n      Restart=on-failure\n      RestartSec=10\n  - name: kmsctl-certs.service\n    command: start\n    enable: true\n    content: |\n      [Unit]\n      Description=KMSCtl - download certs\n      [Service]\n      ExecStartPre=/usr/bin/mkdir -p /opt/bin\n      ExecStartPre=/usr/bin/mkdir -p /var/lib/etcd2\n      ExecStartPre=/usr/bin/mkdir -p /etc/ssl/kubernetes\n      ExecStartPre=/usr/bin/chown -R etcd:etcd /etc/ssl/kubernetes /var/lib/etcd2\n      ExecStartPre=/usr/bin/chmod 0744 /etc/ssl/kubernetes /var/lib/etcd2\n      ExecStartPre=/usr/bin/wget https://github.com/gambol99/kmsctl/releases/download/v1.0.4/kmsctl-linux-amd64 -O /opt/bin/kmsctl\n      ExecStartPre=/usr/bin/chmod +x /opt/bin/kmsctl\n      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${etcdcertobject}\n      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${etcdkeyobject}\n      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${cacertobject}\n      ExecStartPre=/usr/bin/chmod 0644 /etc/ssl/kubernetes/${etcdcertobject} /etc/ssl/kubernetes/${etcdkeyobject} /etc/ssl/kubernetes/${cacertobject}\n      ExecStartPre=/usr/bin/bash -c \"cp -f /etc/ssl/kubernetes/* /etc/ssl/certs\"\n      ExecStartPre=/usr/sbin/update-ca-certificates\n      ExecStartPre=/usr/bin/chown -R etcd:etcd /etc/ssl/kubernetes /var/lib/etcd2\n      ExecStart=/usr/bin/echo \"Completed Cert downloads\"\n      Restart=always\n      RestartSec=10\n      TimeoutStartSec=300\n# Workaround until this has been fixed: https://github.com/systemd/systemd/issues/1784\n  - name: networkd-restart.service\n    command: start\n    enable: true\n    content: |\n      [Unit]\n      Description=Restart systemd-networkd when DOWN interface is found\n      [Service]\n      ExecStart=/usr/bin/bash -c 'while true; do ip -o -4 link show | grep -q \"eth[0-1]:.*state DOWN\" && systemctl restart systemd-networkd; sleep 60; done'\n      Restart=always\n      RestartSec=10\n  - name: 20-eth1.network\n    runtime: false\n    content: |\n      [Match]\n      Name=eth1\n      [Network]\n      DHCP=ipv4\n      [DHCP]\n      UseDNS=false\n      SendHostname=true\n      UseRoutes=false\n      RouteMetric=2048\n  - name: docker.service\n    drop-ins:\n    - name: 10-opts.conf\n      content: |\n        [Service]\n        Environment=\"DOCKER_OPTS=--iptables=false --log-opt max-size=100m --log-opt max-file=1 --default-ulimit=nofile=32768:32768 --default-ulimit=nproc=16384:16384\"\nwrite_files:\n- path: /etc/sysctl.d/10-disable-ipv6.conf\n  permissions: 0644\n  owner: root\n  content: |\n    net.ipv6.conf.all.disable_ipv6 = 1\n- path: /etc/sysctl.d/baselayout.conf\n  permissions: 0644\n  owner: root\n  content: |\n    net.ipv4.ip_forward = 1\n    net.ipv4.conf.default.rp_filter = 2\n    net.ipv4.conf.all.rp_filter = 2\n    kernel.kptr_restrict = 1\n- path: /etc/aws-environment\n  permissions: 0444\n  content: |\n    AWS_REGION=${region}\n    DNS_ZONE_NAME=${zonename}\n    ENVIRONMENT=${environment}\n- path: /etc/profile.env\n  content: |\n    export ETCDCTL_ENDPOINT=https://127.0.0.1:2379\n    export ETCDCTL_CA_FILE=/etc/ssl/kubernetes/ca.pem\n    export ETCDCTL_CERT_FILE=/etc/ssl/kubernetes/etcd.pem\n    export ETCDCTL_KEY_FILE=/etc/ssl/kubernetes/etcdkey.pem\n    source /run/smilodon/environment\n"}, raw:(*config.RawConfig)(0xc421677620)}