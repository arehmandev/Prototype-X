#cloud-config

coreos:
  units:
  - name: systemd-sysctl.service
    command: restart
  - name: etcd2.service
    command: start
    enable: true
    drop-ins:
    - name: 15-deps.conf
      content: |
        [Unit]
        Description=Etcd2 - unit for etcd
        After=etcd-environment.service
        Requires=etcd-environment.service
        [Service]
        Restart=always
        RestartSec=10
        EnvironmentFile=/etc/etcd-environment
        EnvironmentFile=/run/smilodon/environment
        ExecStart=
        ExecStart=/usr/bin/etcd2 --name=node$${NODE_ID}
  - name: etcd-environment.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Etcd-environment - manage Etcd env dynamic variables
      After=smilodon.service
      Requires=smilodon.service
      [Service]
      EnvironmentFile=/run/smilodon/environment
      ExecStartPre=/usr/bin/cat /etc/etcd-environment
      ExecStartPre=/usr/bin/bash -c "echo 'Environment=ETCD_INITIAL_ADVERTISE_PEER_URLS=https://$${NODE_IP}:2380' >> /etc/etcd-environment"
      ExecStartPre=/usr/bin/bash -c "echo 'Environment=ETCD_ADVERTISE_CLIENT_URLS=https://$${NODE_IP}:2379' >> /etc/etcd-environment"
      ExecStartPre=/usr/bin/bash -c "awk '!seen[$0]++' /etc/etcd-environment  > /etc/aws-environment"
      ExecStart=/usr/bin/echo "Environment file for etcd generated"
      Restart=on-failure
      RestartSec=10
  - name: smilodon.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Smilodon - manage ebs+eni attachment
      After=kmsctl-certs.service
      Requires=kmsctl-certs.service
      [Service]
      Environment="URL=${smilodon_release_url}"
      Environment="OUTPUT_FILE=/opt/bin/smilodon"
      Environment="MD5SUM=${smilodon_release_md5}"
      EnvironmentFile=/etc/aws-environment
      ExecStartPre=/usr/bin/mkdir -p /opt/bin
      ExecStartPre=/usr/bin/bash -c 'until [[ -x $${OUTPUT_FILE} ]] && [[ $(md5sum $${OUTPUT_FILE} | cut -f1 -d" ") == $${MD5SUM} ]]; do wget -q -O $${OUTPUT_FILE} $${URL} && chmod +x $${OUTPUT_FILE}; done'
      ExecStart=/opt/bin/smilodon --filters=tag:Env=${environment}
      Restart=on-failure
      RestartSec=10
  - name: kmsctl-certs.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=KMSCtl - download certs
      [Service]
      ExecStartPre=/usr/bin/mkdir -p /opt/bin
      ExecStartPre=/usr/bin/mkdir -p /var/lib/etcd2
      ExecStartPre=/usr/bin/mkdir -p /etc/ssl/kubernetes
      ExecStartPre=/usr/bin/chown -R etcd:etcd /etc/ssl/kubernetes /var/lib/etcd2
      ExecStartPre=/usr/bin/chmod 0744 /etc/ssl/kubernetes /var/lib/etcd2
      ExecStartPre=/usr/bin/wget https://github.com/gambol99/kmsctl/releases/download/v1.0.4/kmsctl-linux-amd64 -O /opt/bin/kmsctl
      ExecStartPre=/usr/bin/chmod +x /opt/bin/kmsctl
      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${etcdcertobject}
      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${etcdkeyobject}
      ExecStartPre=/opt/bin/kmsctl --region ${region} get -b ${bucket} -d /etc/ssl/kubernetes/ ${cacertobject}
      ExecStartPre=/usr/bin/chmod 0644 /etc/ssl/kubernetes/${etcdcertobject} /etc/ssl/kubernetes/${etcdkeyobject} /etc/ssl/kubernetes/${cacertobject}
      ExecStartPre=/usr/bin/bash -c "cp -f /etc/ssl/kubernetes/* /etc/ssl/certs"
      ExecStartPre=/usr/sbin/update-ca-certificates
      ExecStartPre=/usr/bin/chown -R etcd:etcd /etc/ssl/kubernetes /var/lib/etcd2
      ExecStart=/usr/bin/echo "Completed Cert downloads"
      Restart=always
      RestartSec=10
      TimeoutStartSec=300
# Workaround until this has been fixed: https://github.com/systemd/systemd/issues/1784
  - name: networkd-restart.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Restart systemd-networkd when DOWN interface is found
      [Service]
      ExecStart=/usr/bin/bash -c 'while true; do ip -o -4 link show | grep -q "eth[0-1]:.*state DOWN" && systemctl restart systemd-networkd; sleep 60; done'
      Restart=always
      RestartSec=10
  - name: 20-eth1.network
    runtime: false
    content: |
      [Match]
      Name=eth1
      [Network]
      DHCP=ipv4
      [DHCP]
      UseDNS=false
      SendHostname=true
      UseRoutes=false
      RouteMetric=2048
  - name: docker.service
    drop-ins:
    - name: 10-opts.conf
      content: |
        [Service]
        Environment="DOCKER_OPTS=--iptables=false --log-opt max-size=100m --log-opt max-file=1 --default-ulimit=nofile=32768:32768 --default-ulimit=nproc=16384:16384"
write_files:
- path: /etc/sysctl.d/10-disable-ipv6.conf
  permissions: 0644
  owner: root
  content: |
    net.ipv6.conf.all.disable_ipv6 = 1
- path: /etc/sysctl.d/baselayout.conf
  permissions: 0644
  owner: root
  content: |
    net.ipv4.ip_forward = 1
    net.ipv4.conf.default.rp_filter = 2
    net.ipv4.conf.all.rp_filter = 2
    kernel.kptr_restrict = 1
- path: /etc/aws-environment
  permissions: 0444
  content: |
    AWS_REGION=${region}
    DNS_ZONE_NAME=${zonename}
    ENVIRONMENT=${environment}
- path: /etc/profile.env
  content: |
    export ETCDCTL_ENDPOINT=https://127.0.0.1:2379
    export ETCDCTL_CA_FILE=/etc/ssl/kubernetes/ca.pem
    export ETCDCTL_CERT_FILE=/etc/ssl/kubernetes/etcd.pem
    export ETCDCTL_KEY_FILE=/etc/ssl/kubernetes/etcdkey.pem
    source /run/smilodon/environment
- path: /etc/etcd-environment
  permissions: 0644
  content: |
    [Service]
    Environment=ETCD_CA_FILE=/etc/ssl/kubernetes/ca.pem
    Environment=ETCD_CERT_FILE=/etc/ssl/kubernetes/etcd.pem
    Environment=ETCD_KEY_FILE=/etc/ssl/kubernetes/etcdkey.pem
    Environment=ETCD_PEER_CA_FILE=/etc/ssl/kubernetes/ca.pem
    Environment=ETCD_PEER_CERT_FILE=/etc/ssl/kubernetes/etcd.pem
    Environment=ETCD_PEER_KEY_FILE=/etc/ssl/kubernetes/etcdkey.pem
    Environment=ETCD_LISTEN_PEER_URLS=https://0.0.0.0:2380
    Environment=ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379
    Environment=ETCD_CLIENT_CERT_AUTH=true
    Environment=ETCD_PEER_CLIENT_CERT_AUTH=true
    Environment=ETCD_DATA_DIR=/var/lib/etcd2
    Environment=ETCD_INITIAL_CLUSTER_STATE=new
    Environment=ETCD_INITIAL_CLUSTER_TOKEN=etcd-terrakube
    Environment=ETCD_INITIAL_CLUSTER=${etcd_memberlist}
